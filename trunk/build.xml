<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="jsprite" default="all" basedir=".">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

  <tstamp>
    <format property="build.time" pattern="yyyy.MM.dd HH:mm:ss a z"/>
  </tstamp>
  <property name="artifact.name" value="jsprite"/>
  <property name="path.javadocs" value="docs/${artifact.name}/${buildVersion}"/>
  <property name="path.lib" value="lib"/>
  <property name="path.src" value="src/java"/>
  <property name="path.src-test" value="src/java-test"/>
  <property name="path.build" value="build"/>
  <property name="path.build-classes" value="${path.build}/classes"/>
  <property name="path.build-test" value="${path.build}/classes-test"/>
  <property name="path.build.test-results" value="${path.build}/test-results"/>
  <property name="path.dist" value="dist"/>
  <path id="compile.classpath">
    <fileset dir="${path.lib}">
      <include name="*.jar"/>
    </fileset>
  </path>
  <path id="test.classpath">
    <fileset dir="${path.lib}">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${path.build-classes}"/>
    <pathelement path="${path.build-test}"/>
  </path>

  <target name="-ivy-init" description="Initializes Ivy by running setting and resolve. Set ivy.dep.file to override the ivyfile used. Set ivy.settings.file to override the ivysettings file used.">
    <ivy:settings/>
    <ivy:resolve/>
  </target>

  <target name="-require-version" description="Require a buildVerion">
      <if>
       <equals arg1="$${buildVersion}" arg2="${buildVersion}"/>
       <then>
         <fail message="You must specify an 'buildVersion' property."/>
       </then>
     </if>
  </target>

  <target name="-make-dirs" description="Creates all project directories">
    <mkdir dir="${path.build}"/>
    <mkdir dir="${path.build-classes}"/>
    <mkdir dir="${path.build-test}"/>
    <mkdir dir="${path.build.test-results}"/>
    <mkdir dir="${path.dist}"/>
  </target>
  
  <target name="deps" depends="-ivy-init" description="Retrieves project dependencies. Set ivy.dep.file to override the ivy file to use.">
    <if>
        <equals arg1="$${ivy.dep.file}" arg2="${ivy.dep.file}"/>
        <then>
            <echo message="ivy.dep.file not specified using ivy.xml"/>
            <var name="ivy.dep.file" value="ivy.xml"/>
        </then>
    </if>
    <ivy:retrieve pattern="./${path.lib}/[artifact]-[revision].[ext]" conf="compile,provided"/>
  </target>
  
  <target name="clean" description="Remove all build artifacts">
    <delete dir="${path.lib}"/>
    <delete dir="${path.build}"/>
    <delete dir="${path.dist}"/>
  </target>
  
  <target name="compile" depends="-make-dirs,-require-version" description="Compile the source files.">
    <javac destdir="${path.build-classes}" compiler="modern" fork="yes" source="1.5" srcdir="${path.src}" debug="true">
      <classpath refid="compile.classpath"/>
    </javac>
  </target>
  
  <target name="dist" depends="compile" description="Package the compiled files into an artifact.">
    <exec executable="svn" output="${path.build-classes}/svn.info">
        <arg value="info"/>
    </exec>
    <jar destfile="${path.dist}/${artifact.name}.jar" basedir="${path.build-classes}">
	<manifest>
		<!-- Information about the program itself -->
		<attribute name="build-artifact" value="${artifact.name}"/>
		<attribute name="build-version" value="${buildVersion}"/>
                <attribute name="build-time" value="${build.time}"/>
                <attribute name="Main-Class" value="com.jdev.jsprite.SpriteMain"/>
	</manifest>
    </jar>
  </target>

  <target name="compile-test" depends="compile" description="Compile the test code.">
    <javac destdir="${path.build-test}" compiler="modern" fork="yes" source="1.5" srcdir="${path.src-test}">
      <classpath refid="test.classpath"/>
    </javac>
  </target>

  <target name="test" description="Run the test scripts.">
    <junit fork="true" printsummary="withOutAndErr" showoutput="true" haltonfailure="no">
      <classpath refid="test.classpath"/>
      <formatter type="brief" usefile="false"/>
      <formatter type="plain"/>
      <batchtest todir="${path.build.test-results}">
        <fileset dir="${path.src-test}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  
  <target name="all" depends="clean,deps,compile,dist"/>

  <target name="publish-local" depends="-ivy-init,-require-version" description="Publish the artifacts to a local ivy repository.">
    <ivy:publish resolver="local" forcedeliver="true" publishivy="true" srcivypattern="ivy.xml" overwrite="true">
        <artifacts pattern="${path.dist}/[artifact].[ext]"/>
    </ivy:publish>
  </target>

  <target name="javadocs" depends="deps, compile" description="Generate Javadoc API documentation">
    <mkdir dir="${path.javadocs}"/>
    <javadoc sourcepath="${path.src}" destdir="${path.javadocs}" packagenames="com.jdev.jsprite.*" classpathref="compile.classpath" linksource="true" windowtitle="${artifact.name} - ${buildVersion}" header="jSprite JavaDoc"/>
  </target>

</project>
